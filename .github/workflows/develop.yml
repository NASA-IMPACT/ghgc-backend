name: Develop - Lint, Test, and Deploy Workflow

permissions:
  id-token: write
  contents: read

on:
  push:
    branches:
    - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
    
      - uses: actions/cache@v3
        with:
          path: ${{ env.pythonLocation }}
          key:  ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e  .[dev,deploy,test]

      - name: Run pre-commit
        run: pre-commit run --all-files

  deploy: 
    runs-on: ubuntu-latest
    steps:
    
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Setup Node
        uses: actions/setup-node@v1
        with: 
          node-version: 17
      
      - name: Configure awscli
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.DEPLOYMENT_ROLE_ARN }}
          role-session-name: ghgc-dev-deployment
          aws-region: us-west-2

      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      
      - name: Install CDK
        run: npm install -g aws-cdk@2
      
      - uses: actions/cache@v3
        with:
          path: ${{ env.pythonLocation }}
          key:  ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}
      
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[dev,deploy,test] 

      - name: Get dev environment configuration for develop branch
        run: ./scripts/get-env.sh "ghgc-backend-dev"

      - name: Deploy 
        run: |
          echo $STAGE
          cdk deploy --all --require-approval never
          